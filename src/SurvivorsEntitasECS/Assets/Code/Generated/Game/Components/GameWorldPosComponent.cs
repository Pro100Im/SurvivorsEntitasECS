//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Code.GamePlay.WorldPos worldPos { get { return (Code.GamePlay.WorldPos)GetComponent(GameComponentsLookup.WorldPos); } }
    public bool hasWorldPos { get { return HasComponent(GameComponentsLookup.WorldPos); } }

    public void AddWorldPos(UnityEngine.Vector3 newValue) {
        var index = GameComponentsLookup.WorldPos;
        var component = (Code.GamePlay.WorldPos)CreateComponent(index, typeof(Code.GamePlay.WorldPos));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceWorldPos(UnityEngine.Vector3 newValue) {
        var index = GameComponentsLookup.WorldPos;
        var component = (Code.GamePlay.WorldPos)CreateComponent(index, typeof(Code.GamePlay.WorldPos));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveWorldPos() {
        RemoveComponent(GameComponentsLookup.WorldPos);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherWorldPos;

    public static Entitas.IMatcher<GameEntity> WorldPos {
        get {
            if (_matcherWorldPos == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.WorldPos);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherWorldPos = matcher;
            }

            return _matcherWorldPos;
        }
    }
}
